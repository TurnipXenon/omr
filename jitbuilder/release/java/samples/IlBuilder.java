/*******************************************************************************
 * Copyright (c) 2019, 2019 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at http://eclipse.org/legal/epl-2.0
 * or the Apache License, Version 2.0 which accompanies this distribution
 * and is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License, v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception [1] and GNU General Public
 * License, version 2 with the OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/
 
 /*
  * This file is automatically generated. Do not modify!!
  */
        
// package org.eclipse.omr.jitbuilder;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.*;
// import sun.misc.Unsafe;
// import jdk.internal.org.objectweb.asm.*;
// import static jdk.internal.org.objectweb.asm.Opcodes.*;

// import org.eclipse.omr.jitbuilder.IlValue;

public class IlBuilder
{
    IlBuilder(long impl) {
        
    }

    public IlValue Load(String value) {
        return null;
    }

    public IlValue ConstInt32(int value) {
        return null;
    }

    public IlValue Add(IlValue left, IlValue right) {
        return null;
    }

    public IlValue Return(IlValue value) {
        return null;
    }

    long _impl;
}

